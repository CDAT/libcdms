version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      ls workspace/cdat
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &create_conda_env
    name: create_conda_env
    command: |
       export PATH=$HOME/project/$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -y -q conda
       conda config --set anaconda_upload no
       conda list

  - &conda_build_upload
    name: conda_build_upload
    environment:
       CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
       #if [[ $CIRCLE_BRANCH != 'master' ]]; then
       #   exit 0
       #fi
       export PATH=$HOME/project/$WORKDIR/miniconda/bin:$PATH
       source activate $PY_VER
       export VERSION="3.1.3"
       export LABEL="linatest";
       export PKG_NAME="libcdms";
       # REVISIT -- should upload only from 'master'
       export CWD=`pwd`
       echo "xxx cwd: $CWD"
       git status
       git clone -b sync_recipe https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes
       CONDA_RECIPES_REPO=$CWD/$WORKDIR/conda-recipes
       echo "CONDA_RECIPES_REPO: $CONDA_RECIPES_REPO"
       python $CONDA_RECIPES_REPO/prepare_recipe.py -l $VERSION
       cat recipe/meta.yaml
       echo "bash $CONDA_RECIPES_REPO/conda_build_upload.sh $PKG_NAME $CWD/$WORKDIR $LABEL"
       bash $CONDA_RECIPES_REPO/conda_build_upload.sh $PKG_NAME $CWD/$WORKDIR $LABEL


jobs:
  macos_libcdms:
    macos:
      xcode: "11.1.0"
    environment:
      WORKDIR: "workspace/test_macos_libcdms"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *conda_build_upload

  linux_libcdms:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_libcdms"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *conda_build_upload

workflows:
  version: 2 
  libcdms:
      jobs:
        - macos_libcdms
        - linux_libcdms


       
